#!/bin/bash

# Trojan-gRPC 转发器 管理脚本
# 使用方法: gopf

# 颜色定义
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
PURPLE='\033[0;35m'
NC='\033[0m'

# 配置变量
SERVICE_NAME="gopf"
SERVICE_USER="gopf"
INSTALL_DIR="/opt/gopf"
CONFIG_DIR="/etc/gopf"
LOG_DIR="/var/log/gopf"

# 检查是否为 root 用户
check_root() {
    if [ "$EUID" -ne 0 ]; then
        echo -e "${RED}❌ 需要 root 权限执行此操作${NC}"
        echo -e "${YELLOW}请使用: sudo gopf${NC}"
        exit 1
    fi
}

# 获取服务状态
get_service_status() {
    if systemctl is-active --quiet $SERVICE_NAME 2>/dev/null; then
        echo -e "${GREEN}●${NC} 运行中"
    elif systemctl is-enabled --quiet $SERVICE_NAME 2>/dev/null; then
        echo -e "${RED}●${NC} 已停止"
    else
        echo -e "${YELLOW}●${NC} 未安装"
    fi
}

# 获取服务详细信息
get_service_info() {
    if systemctl list-unit-files | grep -q "^$SERVICE_NAME.service"; then
        local status=$(systemctl is-active $SERVICE_NAME 2>/dev/null || echo "inactive")
        local enabled=$(systemctl is-enabled $SERVICE_NAME 2>/dev/null || echo "disabled")
        local uptime=""
        
        if [ "$status" = "active" ]; then
            uptime=$(systemctl show $SERVICE_NAME --property=ActiveEnterTimestamp --value 2>/dev/null)
            if [ -n "$uptime" ]; then
                uptime=" (启动于: $(date -d "$uptime" '+%Y-%m-%d %H:%M:%S' 2>/dev/null || echo "未知"))"
            fi
        fi
        
        echo -e "${WHITE}状态: ${NC}$status$uptime"
        echo -e "${WHITE}开机启动: ${NC}$enabled"
        
        if [ -f "$CONFIG_DIR/config.json" ]; then
            echo -e "${WHITE}配置文件: ${GREEN}存在${NC}"
        else
            echo -e "${WHITE}配置文件: ${RED}缺失${NC}"
        fi
        
        if [ -f "$INSTALL_DIR/grpc-forwarder" ]; then
            echo -e "${WHITE}程序文件: ${GREEN}存在${NC}"
        else
            echo -e "${WHITE}程序文件: ${RED}缺失${NC}"
        fi
    else
        echo -e "${RED}服务未安装${NC}"
    fi
}

# 显示主菜单
show_menu() {
    clear
    echo -e "${CYAN}╔══════════════════════════════════════╗${NC}"
    echo -e "${CYAN}║        Trojan-gRPC 转发器 管理       ║${NC}"
    echo -e "${CYAN}╠══════════════════════════════════════╣${NC}"
    echo -e "${CYAN}║${NC} 服务状态: $(get_service_status)                    ${CYAN}║${NC}"
    echo -e "${CYAN}╚══════════════════════════════════════╝${NC}"
    echo ""
    echo -e "${WHITE}请选择操作:${NC}"
    echo ""
    echo -e "  ${GREEN}1)${NC} 🚀 启动服务"
    echo -e "  ${RED}2)${NC} 🛑 停止服务"
    echo -e "  ${YELLOW}3)${NC} 🔄 重启服务"
    echo -e "  ${BLUE}4)${NC} 📊 查看状态"
    echo -e "  ${CYAN}5)${NC} 📋 查看日志"
    echo -e "  ${PURPLE}6)${NC} ⚙️  编辑配置"
    echo -e "  ${WHITE}7)${NC} 🔧 服务管理"
    echo -e "  ${RED}8)${NC} 🗑️  卸载服务"
    echo -e "  ${WHITE}0)${NC} 🚪 退出"
    echo ""
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
}

# 启动服务
start_service() {
    check_root
    echo -e "${YELLOW}🚀 正在启动服务...${NC}"
    if systemctl start $SERVICE_NAME; then
        sleep 2
        if systemctl is-active --quiet $SERVICE_NAME; then
            echo -e "${GREEN}✅ 服务启动成功${NC}"
        else
            echo -e "${RED}❌ 服务启动失败${NC}"
            echo -e "${YELLOW}查看错误日志: journalctl -u $SERVICE_NAME --no-pager -n 20${NC}"
        fi
    else
        echo -e "${RED}❌ 服务启动失败${NC}"
    fi
    read -p "按回车键继续..."
}

# 停止服务
stop_service() {
    check_root
    echo -e "${YELLOW}🛑 正在停止服务...${NC}"
    if systemctl stop $SERVICE_NAME; then
        echo -e "${GREEN}✅ 服务已停止${NC}"
    else
        echo -e "${RED}❌ 服务停止失败${NC}"
    fi
    read -p "按回车键继续..."
}

# 重启服务
restart_service() {
    check_root
    echo -e "${YELLOW}🔄 正在重启服务...${NC}"
    if systemctl restart $SERVICE_NAME; then
        sleep 2
        if systemctl is-active --quiet $SERVICE_NAME; then
            echo -e "${GREEN}✅ 服务重启成功${NC}"
        else
            echo -e "${RED}❌ 服务重启失败${NC}"
            echo -e "${YELLOW}查看错误日志: journalctl -u $SERVICE_NAME --no-pager -n 20${NC}"
        fi
    else
        echo -e "${RED}❌ 服务重启失败${NC}"
    fi
    read -p "按回车键继续..."
}

# 查看状态
show_status() {
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${WHITE}📊 服务详细状态${NC}"
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    get_service_info
    echo ""
    if systemctl list-unit-files | grep -q "^$SERVICE_NAME.service"; then
        echo -e "${WHITE}systemctl 状态:${NC}"
        systemctl status $SERVICE_NAME --no-pager -l
    fi
    echo ""
    read -p "按回车键继续..."
}

# 查看日志
show_logs() {
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${WHITE}📋 服务日志 (最近50行)${NC}"
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo ""
    echo -e "${YELLOW}1)${NC} 查看最近日志"
    echo -e "${YELLOW}2)${NC} 实时跟踪日志"
    echo -e "${YELLOW}3)${NC} 查看错误日志"
    echo -e "${YELLOW}0)${NC} 返回主菜单"
    echo ""
    read -p "请选择: " log_choice
    
    case $log_choice in
        1)
            echo -e "${CYAN}最近50行日志:${NC}"
            journalctl -u $SERVICE_NAME --no-pager -n 50
            ;;
        2)
            echo -e "${CYAN}实时日志 (按 Ctrl+C 退出):${NC}"
            journalctl -u $SERVICE_NAME -f
            ;;
        3)
            echo -e "${CYAN}错误日志:${NC}"
            journalctl -u $SERVICE_NAME --no-pager -p err
            ;;
        0)
            return
            ;;
        *)
            echo -e "${RED}无效选择${NC}"
            ;;
    esac
    echo ""
    read -p "按回车键继续..."
}

# 编辑配置
edit_config() {
    check_root
    if [ ! -f "$CONFIG_DIR/config.json" ]; then
        echo -e "${RED}❌ 配置文件不存在: $CONFIG_DIR/config.json${NC}"
        read -p "按回车键继续..."
        return
    fi
    
    echo -e "${YELLOW}📝 编辑配置文件...${NC}"
    echo -e "${WHITE}配置文件路径: $CONFIG_DIR/config.json${NC}"
    echo ""
    
    if command -v nano &> /dev/null; then
        nano "$CONFIG_DIR/config.json"
    elif command -v vim &> /dev/null; then
        vim "$CONFIG_DIR/config.json"
    elif command -v vi &> /dev/null; then
        vi "$CONFIG_DIR/config.json"
    else
        echo -e "${RED}❌ 未找到文本编辑器 (nano/vim/vi)${NC}"
        read -p "按回车键继续..."
        return
    fi
    
    echo ""
    read -p "配置已保存，是否重启服务使配置生效? (y/N): " restart_confirm
    if [[ $restart_confirm =~ ^[Yy]$ ]]; then
        restart_service
    fi
}

# 服务管理
service_management() {
    check_root
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${WHITE}🔧 服务管理${NC}"
    echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo ""
    echo -e "${YELLOW}1)${NC} 启用开机自启"
    echo -e "${YELLOW}2)${NC} 禁用开机自启"
    echo -e "${YELLOW}3)${NC} 重载服务配置"
    echo -e "${YELLOW}4)${NC} 查看服务文件"
    echo -e "${YELLOW}0)${NC} 返回主菜单"
    echo ""
    read -p "请选择: " mgmt_choice
    
    case $mgmt_choice in
        1)
            if systemctl enable $SERVICE_NAME; then
                echo -e "${GREEN}✅ 已启用开机自启${NC}"
            else
                echo -e "${RED}❌ 启用开机自启失败${NC}"
            fi
            ;;
        2)
            if systemctl disable $SERVICE_NAME; then
                echo -e "${GREEN}✅ 已禁用开机自启${NC}"
            else
                echo -e "${RED}❌ 禁用开机自启失败${NC}"
            fi
            ;;
        3)
            if systemctl daemon-reload; then
                echo -e "${GREEN}✅ 服务配置已重载${NC}"
            else
                echo -e "${RED}❌ 重载服务配置失败${NC}"
            fi
            ;;
        4)
            echo -e "${CYAN}服务文件内容:${NC}"
            cat /etc/systemd/system/$SERVICE_NAME.service
            ;;
        0)
            return
            ;;
        *)
            echo -e "${RED}无效选择${NC}"
            ;;
    esac
    echo ""
    read -p "按回车键继续..."
}

# 卸载服务
uninstall_service() {
    check_root
    echo -e "${RED}⚠️  警告: 这将完全卸载 Trojan-gRPC 转发器${NC}"
    echo -e "${YELLOW}包括: 服务、配置文件、程序文件和日志${NC}"
    echo ""
    read -p "确认卸载? (输入 'YES' 确认): " confirm
    
    if [ "$confirm" != "YES" ]; then
        echo -e "${YELLOW}❌ 取消卸载${NC}"
        read -p "按回车键继续..."
        return
    fi
    
    echo -e "${YELLOW}🗑️  正在卸载...${NC}"
    
    # 停止并禁用服务
    systemctl stop $SERVICE_NAME 2>/dev/null || true
    systemctl disable $SERVICE_NAME 2>/dev/null || true
    
    # 删除服务文件
    rm -f /etc/systemd/system/$SERVICE_NAME.service
    systemctl daemon-reload
    
    # 删除程序文件
    rm -rf $INSTALL_DIR
    rm -rf $CONFIG_DIR
    rm -rf $LOG_DIR
    
    # 删除用户
    userdel $SERVICE_USER 2>/dev/null || true
    
    # 删除管理脚本
    rm -f /usr/local/bin/gopf
    
    echo -e "${GREEN}✅ 卸载完成${NC}"
    echo -e "${YELLOW}💡 如需重新安装，请运行:${NC}"
    echo -e "${WHITE}curl -fsSL https://raw.githubusercontent.com/wanglao888/gopf/main/install.sh | bash${NC}"
    echo ""
    read -p "按回车键退出..."
    exit 0
}

# 主循环
main() {
    while true; do
        show_menu
        read -p "请选择 (0-8): " choice
        
        case $choice in
            1)
                start_service
                ;;
            2)
                stop_service
                ;;
            3)
                restart_service
                ;;
            4)
                show_status
                ;;
            5)
                show_logs
                ;;
            6)
                edit_config
                ;;
            7)
                service_management
                ;;
            8)
                uninstall_service
                ;;
            0)
                echo -e "${GREEN}👋 再见！${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}❌ 无效选择，请输入 0-8${NC}"
                sleep 1
                ;;
        esac
    done
}

# 运行主程序
main
